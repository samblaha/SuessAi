app SuessAI {
  wasp: {
    version: "^0.11.1"
  },
  title: "SuessAI",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int     @id @default(autoincrement())
    username String  @unique
    password String
    stories  Story[]
psl=}

entity Story {=psl
    id           Int    @id @default(autoincrement())
    title        String
    content      String
    illustration String
    user         User   @relation(fields: [userId], references: [id])
    userId       Int
psl=}

action createStory {
  fn: import { createStory } from "@server/actions.js",
  entities: [Story]
}

query getStory {
  fn: import { getStory } from "@server/queries.js",
  entities: [Story]
}

query getAllStories {
  fn: import { getAllStories } from "@server/queries.js",
  entities: [Story, User]
}

route CreateStoryRoute { path: "/create-story", to: CreateStoryPage }
page CreateStoryPage {
  component: import { CreateStory } from "@client/pages/CreateStory.jsx",
  authRequired: true
}

route StoryRoute { path: "/story/:storyId", to: StoryPage }
page StoryPage {
  component: import { Story } from "@client/pages/Story.jsx",
  authRequired: true
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}